/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.30
 * Generated at: 2013-06-28 10:42:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.apache.log4j.Logger;
import gr.ntua.ivml.mint.persistent.User;
import gr.ntua.ivml.mint.db.DB;
import gr.ntua.ivml.mint.util.Config;
import gr.ntua.ivml.mint.actions.Logview;

public final class logview_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

 public final Logger log = Logger.getLogger(this.getClass());
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/jsp/_include.jsp", Long.valueOf(1371811843000L));
    _jspx_dependants.put("/WEB-INF/jsp/customize.tld", Long.valueOf(1371811845000L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fs_005fproperty_0026_005fvalue_005fescape_005fnobody;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fs_005fproperty_0026_005fvalue_005fescape_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fs_005fproperty_0026_005fvalue_005fescape_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"error.jsp", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

log.debug( "Output rendered" );

User user=(User) request.getSession().getAttribute("user");
if( user != null ) {
	user = DB.getUserDAO().findById(user.getDbID(), false );
}

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write(".datasetLog {\r\n");
      out.write("\tmargin-left: 2em;\r\n");
      out.write("\tmargin-top: 3px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".datasetTitle {\r\n");
      out.write("\tfont-size: 110%;\r\n");
      out.write("\tfont-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".logEntry {\r\n");
      out.write("\tmargin-top: 3px;\r\n");
      out.write("\tmargin-left: 1em;\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".logMessage {\r\n");
      out.write("\tdisplay: inline-block;\r\n");
      out.write("\twidth: 60%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".logMessageWithDetail {\r\n");
      out.write("\tcolor: #0075FF;\r\n");
      out.write("\tdisplay: inline-block;\r\n");
      out.write("\twidth: 60%;\r\n");
      out.write("\tcursor:pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".logMessageWithDetail:hover {\r\n");
      out.write("/*\ttext-decoration:underline; */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(".nicedate {\r\n");
      out.write("\tfloat: right;\r\n");
      out.write("\tdisplay: inline;\r\n");
      out.write("\tright: 10px;\r\n");
      out.write("\twidth: 10em;\r\n");
      out.write("\talign: left;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".msgDetail {\r\n");
      out.write("\tdisplay: block;\r\n");
      out.write("\tclear: both;\r\n");
      out.write("\tmargin-left: 1em;\r\n");
      out.write("\tpadding-top: 4px;\r\n");
      out.write("\tpadding-bottom: 1px;\r\n");
      out.write("\tfont-style: italic;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".tailDataset {\r\n");
      out.write("\tpadding-top: 5px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"panel-body\">\r\n");
      out.write("<div class=\"block-nav\">\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"summary\">\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"label\">Log view </div>  \r\n");
      out.write("\r\n");
      out.write("    <div class=\"info\">&nbsp;\r\n");
      out.write("\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t<div id=\"0_datasetLog\" class=\"datasetLog\" style=\"display:none; \">\r\n");
      out.write("\t\t\t<div id=\"0_title\" class=\"datasetTitle\"> Dummy Dataset Title </div>\r\n");
      out.write("\t\t\t<!--  copy the div underneath for every log entry -->\r\n");
      out.write("\t\t\t<div id=\"0_logEntry\" class=\"logEntry\" style=\"display:none\">\r\n");
      out.write("\t\t\t\t<div id=\"0_logEvent\" class=\"logMessage\">log message </div> \r\n");
      out.write("\t\t\t\t<div class=\"nicedate\"> 1 minute ago </div> \r\n");
      out.write("\t\t\t\t<div class=\"msgDetail\" > Detail of log message </div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<!-- any dependent stuff can go in here -->\r\n");
      out.write("\t\t\t<div class=\"tailDataset\" style=\"display:none\">\r\n");
      out.write("\t\t\t\t<!--  copy more datasetLog divs into here  -->\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t</div></div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\tvar data = ");
      if (_jspx_meth_s_005fproperty_005f0(_jspx_page_context))
        return;
      out.write(";\r\n");
      out.write("\r\n");
      out.write("\tfunction formatDetail( msg ) {\r\n");
      out.write("\t\treturn msg;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction buildDivForDataset( dataset ) {\r\n");
      out.write("\t\tvar dsDiv = $(\"#0_datasetLog\").clone();\r\n");
      out.write("\t\tvar dsId = dataset[\"dbID\"];\r\n");
      out.write("\t\tdsDiv.attr( \"id\", dsId+\"_datasetLog\" );\r\n");
      out.write("\t\tdsDiv.find(\"#0_title\").attr( \"id\", dsId+\"_title\").text( dataset[\"title\"]);\r\n");
      out.write("\t\tvar insertAfter = dsDiv.find(\".datasetTitle\");\r\n");
      out.write("\t\tvar logs = dataset.logs;\r\n");
      out.write("\t\tif( logs != null ) {\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// iterate over the logs and show each of them\r\n");
      out.write("\t\t\tfor( var i = 0; i<logs.length; i++ ) {\r\n");
      out.write("\t\t\t\tvar logDiv = dsDiv.find( \"#0_logEntry\" ).clone();\r\n");
      out.write("\t\t\t\tlogDiv.attr( \"id\", logs[i].dbID+\"_logEntry\" );\r\n");
      out.write("\t\t\t\tlogDiv.find(\".msgDetail\").html( logs[i].detail).hide();\r\n");
      out.write("\t\t\t\tlogDiv.find( \"#0_logEvent\")\r\n");
      out.write("\t\t\t\t .attr( \"id\", logs[i].dbID+\"_logEvent\" )\r\n");
      out.write("\t\t\t\t .text( logs[i].msg );\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tif(( logs[i].detail != null) &&\r\n");
      out.write("\t\t\t\t\t\tlogs[i].detail.trim().length > 0 ) {\r\n");
      out.write("\t\t\t\t\t\t logDiv.click( function() {\r\n");
      out.write("\t\t\t\t\t\t\t $(this).find( \".msgDetail\").toggle(); \r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t logDiv.find( \".logMessage\" ).addClass( \"logMessageWithDetail\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tlogDiv.find(\".nicedate\").attr(\"title\", logs[i].date ).text( logs[i].nicedate );\r\n");
      out.write("\t\t\t\tlogDiv.show();\r\n");
      out.write("\t\t\t\tinsertAfter.after( logDiv );\r\n");
      out.write("\t\t\t\tinsertAfter = logDiv;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// check for a tail and build all datasets for it\r\n");
      out.write("\t\t// append the dataset divs inside the tail div\r\n");
      out.write("\t\tif( \"tail\" in dataset ) {\r\n");
      out.write("\t\t\tfor( var j=0; j<dataset.tail.length; j++ ) {\r\n");
      out.write("\t\t\t\tvar tailDatasetDiv = buildDivForDataset( dataset.tail[j] );\r\n");
      out.write("\t\t\t\tdsDiv.find( \".tailDataset:first\" )\r\n");
      out.write("\t\t\t\t   .show()\r\n");
      out.write("\t\t\t\t   .append( tailDatasetDiv ); \r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tdsDiv.show();\r\n");
      out.write("\t\treturn dsDiv;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\tvar dom = buildDivForDataset( data );\r\n");
      out.write("\t$(\"#0_datasetLog\").before( dom );\r\n");
      out.write("\t\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_s_005fproperty_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  s:property
    org.apache.struts2.views.jsp.PropertyTag _jspx_th_s_005fproperty_005f0 = (org.apache.struts2.views.jsp.PropertyTag) _005fjspx_005ftagPool_005fs_005fproperty_0026_005fvalue_005fescape_005fnobody.get(org.apache.struts2.views.jsp.PropertyTag.class);
    _jspx_th_s_005fproperty_005f0.setPageContext(_jspx_page_context);
    _jspx_th_s_005fproperty_005f0.setParent(null);
    // /WEB-INF/jsp/logview.jsp(91,12) name = value type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_s_005fproperty_005f0.setValue("json");
    // /WEB-INF/jsp/logview.jsp(91,12) name = escape type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_s_005fproperty_005f0.setEscape(false);
    int _jspx_eval_s_005fproperty_005f0 = _jspx_th_s_005fproperty_005f0.doStartTag();
    if (_jspx_th_s_005fproperty_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fs_005fproperty_0026_005fvalue_005fescape_005fnobody.reuse(_jspx_th_s_005fproperty_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fs_005fproperty_0026_005fvalue_005fescape_005fnobody.reuse(_jspx_th_s_005fproperty_005f0);
    return false;
  }
}
