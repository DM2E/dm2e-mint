<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
   <class name="gr.ntua.ivml.mint.persistent.Publication" table="publication"
   	discriminator-value="false" >
	    <id name="dbID" column="publication_id">
		    <generator class="sequence">
		    	<param name="sequence">seq_publication_id</param>
		    </generator>
	    </id>
		<!-- 	    
			This discriminator is an example if there are many possible Publications in the system.
			Currently the Publication for each project might be a fixed type.
			
			<discriminator formula="(select position( 'lido' in coalesce( target_schema,''))>0 from Publication p where p.publication_id = publication_id)" 
	    	type="boolean" />
	     -->
		<discriminator formula="(select 1>0  )" 
	    	type="boolean" />
	    
	    <property name="itemCount" column="item_count"  />
	    <property name="statusMessage" column="status_message" />
	    <property name="report" />
	    <property name="statusCode" column="status_code" />
	    <property name="lastProcess" column="last_process" />
	    
		<many-to-one name="publishingUser" 
        column="user_id"
        not-null="false"/>
		
		<many-to-one name="publishingOrganization" 
        column="organization_id"
        not-null="false"/>
		
		<many-to-one name="zippedOutput" 
		cascade="all" 
		column="blob_wrap_id"
		unique="true"
		not-null="false" />
		
	    <property name="targetSchema" column="target_schema" />
	    <bag name="inputUploads" table="publication_input" >
	    	<key column="publication_id" />
	    	<many-to-many column="data_upload_id"
	    	 	class="gr.ntua.ivml.mint.persistent.DataUpload" /> 
	    </bag>
	    <subclass name="gr.ntua.ivml.mint.persistent.SchemaPublication" discriminator-value="true" />
   </class>

</hibernate-mapping>