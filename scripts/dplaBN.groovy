mappingHandler = new JSONMappingHandler(mapping);
template = new JSONMappingHandler(mapping.getJSONObject("template"));


handlers = template.getHandlersForPrefixAndName("dc", "language");
dcLanguage = handlers.get(0);
dcLanguage.addEnumeration("ab", "Abkhaz");
dcLanguage.addEnumeration("aa", "Afar");
dcLanguage.addEnumeration("af", "Afrikaans");
dcLanguage.addEnumeration("ak", "Akan");
dcLanguage.addEnumeration("sq", "Albanian");
dcLanguage.addEnumeration("am", "Amharic");
dcLanguage.addEnumeration("ar", "Arabic");
dcLanguage.addEnumeration("an", "Aragonese");
dcLanguage.addEnumeration("hy", "Armenian");
dcLanguage.addEnumeration("as", "Assamese");
dcLanguage.addEnumeration("av", "Avaric");
dcLanguage.addEnumeration("ae", "Avestan");
dcLanguage.addEnumeration("ay", "Aymara");
dcLanguage.addEnumeration("az", "Azerbaijani");
dcLanguage.addEnumeration("bm", "Bambara");
dcLanguage.addEnumeration("ba", "Bashkir");
dcLanguage.addEnumeration("eu", "Basque");
dcLanguage.addEnumeration("be", "Belarusian");
dcLanguage.addEnumeration("bn", "Bengali; Bangla");
dcLanguage.addEnumeration("bh", "Bihari");
dcLanguage.addEnumeration("bi", "Bislama");
dcLanguage.addEnumeration("bs", "Bosnian");
dcLanguage.addEnumeration("br", "Breton");
dcLanguage.addEnumeration("bg", "Bulgarian");
dcLanguage.addEnumeration("my", "Burmese");
dcLanguage.addEnumeration("ca", "Catalan; Valencian");
dcLanguage.addEnumeration("ch", "Chamorro");
dcLanguage.addEnumeration("ce", "Chechen");
dcLanguage.addEnumeration("ny", "Chichewa; Chewa; Nyanja");
dcLanguage.addEnumeration("zh", "Chinese");
dcLanguage.addEnumeration("cv", "Chuvash");
dcLanguage.addEnumeration("kw", "Cornish");
dcLanguage.addEnumeration("co", "Corsican");
dcLanguage.addEnumeration("cr", "Cree");
dcLanguage.addEnumeration("hr", "Croatian");
dcLanguage.addEnumeration("cs", "Czech");
dcLanguage.addEnumeration("da", "Danish");
dcLanguage.addEnumeration("dv", "Divehi; Dhivehi; Maldivian;");
dcLanguage.addEnumeration("nl", "Dutch");
dcLanguage.addEnumeration("dz", "Dzongkha");
dcLanguage.addEnumeration("en", "English");
dcLanguage.addEnumeration("eo", "Esperanto");
dcLanguage.addEnumeration("et", "Estonian");
dcLanguage.addEnumeration("ee", "Ewe");
dcLanguage.addEnumeration("fo", "Faroese");
dcLanguage.addEnumeration("fj", "Fijian");
dcLanguage.addEnumeration("fi", "Finnish");
dcLanguage.addEnumeration("fr", "French");
dcLanguage.addEnumeration("ff", "Fula; Fulah; Pulaar; Pular");
dcLanguage.addEnumeration("gl", "Galician");
dcLanguage.addEnumeration("ka", "Georgian");
dcLanguage.addEnumeration("de", "German");
dcLanguage.addEnumeration("el", "Greek, Modern");
dcLanguage.addEnumeration("gn", "Guaraní");
dcLanguage.addEnumeration("gu", "Gujarati");
dcLanguage.addEnumeration("ht", "Haitian; Haitian Creole");
dcLanguage.addEnumeration("ha", "Hausa");
dcLanguage.addEnumeration("he", "Hebrew (modern)");
dcLanguage.addEnumeration("hz", "Herero");
dcLanguage.addEnumeration("hi", "Hindi");
dcLanguage.addEnumeration("ho", "Hiri Motu");
dcLanguage.addEnumeration("hu", "Hungarian");
dcLanguage.addEnumeration("ia", "Interlingua");
dcLanguage.addEnumeration("id", "Indonesian");
dcLanguage.addEnumeration("ie", "Interlingue");
dcLanguage.addEnumeration("ga", "Irish");
dcLanguage.addEnumeration("ig", "Igbo");
dcLanguage.addEnumeration("ik", "Inupiaq");
dcLanguage.addEnumeration("io", "Ido");
dcLanguage.addEnumeration("is", "Icelandic");
dcLanguage.addEnumeration("it", "Italian");
dcLanguage.addEnumeration("iu", "Inuktitut");
dcLanguage.addEnumeration("ja", "Japanese");
dcLanguage.addEnumeration("jv", "Javanese");
dcLanguage.addEnumeration("kl", "Kalaallisut, Greenlandic");
dcLanguage.addEnumeration("kn", "Kannada");
dcLanguage.addEnumeration("kr", "Kanuri");
dcLanguage.addEnumeration("ks", "Kashmiri");
dcLanguage.addEnumeration("kk", "Kazakh");
dcLanguage.addEnumeration("km", "Khmer");
dcLanguage.addEnumeration("ki", "Kikuyu, Gikuyu");
dcLanguage.addEnumeration("rw", "Kinyarwanda");
dcLanguage.addEnumeration("ky", "Kyrgyz");
dcLanguage.addEnumeration("kv", "Komi");
dcLanguage.addEnumeration("kg", "Kongo");
dcLanguage.addEnumeration("ko", "Korean");
dcLanguage.addEnumeration("ku", "Kurdish");
dcLanguage.addEnumeration("kj", "Kwanyama, Kuanyama");
dcLanguage.addEnumeration("la", "Latin");
dcLanguage.addEnumeration("lb", "Luxembourgish, Letzeburgesch");
dcLanguage.addEnumeration("lg", "Ganda");
dcLanguage.addEnumeration("li", "Limburgish, Limburgan, Limburger");
dcLanguage.addEnumeration("ln", "Lingala");
dcLanguage.addEnumeration("lo", "Lao");
dcLanguage.addEnumeration("lt", "Lithuanian");
dcLanguage.addEnumeration("lu", "Luba-Katanga");
dcLanguage.addEnumeration("lv", "Latvian");
dcLanguage.addEnumeration("gv", "Manx");
dcLanguage.addEnumeration("mk", "Macedonian");
dcLanguage.addEnumeration("mg", "Malagasy");
dcLanguage.addEnumeration("ms", "Malay");
dcLanguage.addEnumeration("ml", "Malayalam");
dcLanguage.addEnumeration("mt", "Maltese");
dcLanguage.addEnumeration("mi", "Māori");
dcLanguage.addEnumeration("mr", "Marathi (Marāṭhī)");
dcLanguage.addEnumeration("mh", "Marshallese");
dcLanguage.addEnumeration("mn", "Mongolian");
dcLanguage.addEnumeration("na", "Nauru");
dcLanguage.addEnumeration("nv", "Navajo, Navaho");
dcLanguage.addEnumeration("nb", "Norwegian Bokmål");
dcLanguage.addEnumeration("nd", "North Ndebele");
dcLanguage.addEnumeration("ne", "Nepali");
dcLanguage.addEnumeration("ng", "Ndonga");
dcLanguage.addEnumeration("nn", "Norwegian Nynorsk");
dcLanguage.addEnumeration("no", "Norwegian");
dcLanguage.addEnumeration("ii", "Nuosu");
dcLanguage.addEnumeration("nr", "South Ndebele");
dcLanguage.addEnumeration("oc", "Occitan");
dcLanguage.addEnumeration("oj", "Ojibwe, Ojibwa");
dcLanguage.addEnumeration("cu", "Old Church Slavonic, Church Slavic, Church Slavonic, Old Bulgarian, Old Slavonic");
dcLanguage.addEnumeration("om", "Oromo");
dcLanguage.addEnumeration("or", "Oriya");
dcLanguage.addEnumeration("os", "Ossetian, Ossetic");
dcLanguage.addEnumeration("pa", "Panjabi, Punjabi");
dcLanguage.addEnumeration("pi", "Pāli");
dcLanguage.addEnumeration("fa", "Persian");
dcLanguage.addEnumeration("pl", "Polish");
dcLanguage.addEnumeration("ps", "Pashto, Pushto");
dcLanguage.addEnumeration("pt", "Portuguese");
dcLanguage.addEnumeration("qu", "Quechua");
dcLanguage.addEnumeration("rm", "Romansh");
dcLanguage.addEnumeration("rn", "Kirundi");
dcLanguage.addEnumeration("ro", "Romanian, Moldavian(Romanian from Republic of Moldova)");
dcLanguage.addEnumeration("ru", "Russian");
dcLanguage.addEnumeration("sa", "Sanskrit (Saṁskṛta)");
dcLanguage.addEnumeration("sc", "Sardinian");
dcLanguage.addEnumeration("sd", "Sindhi");
dcLanguage.addEnumeration("se", "Northern Sami");
dcLanguage.addEnumeration("sm", "Samoan");
dcLanguage.addEnumeration("sg", "Sango");
dcLanguage.addEnumeration("sr", "Serbian");
dcLanguage.addEnumeration("gd", "Scottish Gaelic; Gaelic");
dcLanguage.addEnumeration("sn", "Shona");
dcLanguage.addEnumeration("si", "Sinhala, Sinhalese");
dcLanguage.addEnumeration("sk", "Slovak");
dcLanguage.addEnumeration("sl", "Slovene");
dcLanguage.addEnumeration("so", "Somali");
dcLanguage.addEnumeration("st", "Southern Sotho");
dcLanguage.addEnumeration("es", "Spanish; Castilian");
dcLanguage.addEnumeration("su", "Sundanese");
dcLanguage.addEnumeration("sw", "Swahili");
dcLanguage.addEnumeration("ss", "Swati");
dcLanguage.addEnumeration("sv", "Swedish");
dcLanguage.addEnumeration("ta", "Tamil");
dcLanguage.addEnumeration("te", "Telugu");
dcLanguage.addEnumeration("tg", "Tajik");
dcLanguage.addEnumeration("th", "Thai");
dcLanguage.addEnumeration("ti", "Tigrinya");
dcLanguage.addEnumeration("bo", "Tibetan Standard, Tibetan, Central");
dcLanguage.addEnumeration("tk", "Turkmen");
dcLanguage.addEnumeration("tl", "Tagalog");
dcLanguage.addEnumeration("tn", "Tswana");
dcLanguage.addEnumeration("to", "Tonga (Tonga Islands)");
dcLanguage.addEnumeration("tr", "Turkish");
dcLanguage.addEnumeration("ts", "Tsonga");
dcLanguage.addEnumeration("tt", "Tatar");
dcLanguage.addEnumeration("tw", "Twi");
dcLanguage.addEnumeration("ty", "Tahitian");
dcLanguage.addEnumeration("ug", "Uighur, Uyghur");
dcLanguage.addEnumeration("uk", "Ukrainian");
dcLanguage.addEnumeration("ur", "Urdu");
dcLanguage.addEnumeration("uz", "Uzbek");
dcLanguage.addEnumeration("ve", "Venda");
dcLanguage.addEnumeration("vi", "Vietnamese");
dcLanguage.addEnumeration("vo", "Volapük");
dcLanguage.addEnumeration("wa", "Walloon");
dcLanguage.addEnumeration("cy", "Welsh");
dcLanguage.addEnumeration("wo", "Wolof");
dcLanguage.addEnumeration("fy", "Western Frisian");
dcLanguage.addEnumeration("xh", "Xhosa");
dcLanguage.addEnumeration("yi", "Yiddish");
dcLanguage.addEnumeration("yo", "Yoruba");
dcLanguage.addEnumeration("za", "Zhuang, Chuang");
dcLanguage.addEnumeration("zu", "Zulu");

handlers = template.getHandlersForPrefixAndName("xml","@lang");
for(JSONMappingHandler handler: handlers) {
//	JSONMappingHandler about = handler.getHandlerForName("@lang");
	handler.addEnumeration("ab", "Abkhaz");
	handler.addEnumeration("aa", "Afar");
	handler.addEnumeration("af", "Afrikaans");
	handler.addEnumeration("ak", "Akan");
	handler.addEnumeration("sq", "Albanian");
	handler.addEnumeration("am", "Amharic");
	handler.addEnumeration("ar", "Arabic");
	handler.addEnumeration("an", "Aragonese");
	handler.addEnumeration("hy", "Armenian");
	handler.addEnumeration("as", "Assamese");
	handler.addEnumeration("av", "Avaric");
	handler.addEnumeration("ae", "Avestan");
	handler.addEnumeration("ay", "Aymara");
	handler.addEnumeration("az", "Azerbaijani");
	handler.addEnumeration("bm", "Bambara");
	handler.addEnumeration("ba", "Bashkir");
	handler.addEnumeration("eu", "Basque");
	handler.addEnumeration("be", "Belarusian");
	handler.addEnumeration("bn", "Bengali; Bangla");
	handler.addEnumeration("bh", "Bihari");
	handler.addEnumeration("bi", "Bislama");
	handler.addEnumeration("bs", "Bosnian");
	handler.addEnumeration("br", "Breton");
	handler.addEnumeration("bg", "Bulgarian");
	handler.addEnumeration("my", "Burmese");
	handler.addEnumeration("ca", "Catalan; Valencian");
	handler.addEnumeration("ch", "Chamorro");
	handler.addEnumeration("ce", "Chechen");
	handler.addEnumeration("ny", "Chichewa; Chewa; Nyanja");
	handler.addEnumeration("zh", "Chinese");
	handler.addEnumeration("cv", "Chuvash");
	handler.addEnumeration("kw", "Cornish");
	handler.addEnumeration("co", "Corsican");
	handler.addEnumeration("cr", "Cree");
	handler.addEnumeration("hr", "Croatian");
	handler.addEnumeration("cs", "Czech");
	handler.addEnumeration("da", "Danish");
	handler.addEnumeration("dv", "Divehi; Dhivehi; Maldivian;");
	handler.addEnumeration("nl", "Dutch");
	handler.addEnumeration("dz", "Dzongkha");
	handler.addEnumeration("en", "English");
	handler.addEnumeration("eo", "Esperanto");
	handler.addEnumeration("et", "Estonian");
	handler.addEnumeration("ee", "Ewe");
	handler.addEnumeration("fo", "Faroese");
	handler.addEnumeration("fj", "Fijian");
	handler.addEnumeration("fi", "Finnish");
	handler.addEnumeration("fr", "French");
	handler.addEnumeration("ff", "Fula; Fulah; Pulaar; Pular");
	handler.addEnumeration("gl", "Galician");
	handler.addEnumeration("ka", "Georgian");
	handler.addEnumeration("de", "German");
	handler.addEnumeration("el", "Greek, Modern");
	handler.addEnumeration("gn", "Guaraní");
	handler.addEnumeration("gu", "Gujarati");
	handler.addEnumeration("ht", "Haitian; Haitian Creole");
	handler.addEnumeration("ha", "Hausa");
	handler.addEnumeration("he", "Hebrew (modern)");
	handler.addEnumeration("hz", "Herero");
	handler.addEnumeration("hi", "Hindi");
	handler.addEnumeration("ho", "Hiri Motu");
	handler.addEnumeration("hu", "Hungarian");
	handler.addEnumeration("ia", "Interlingua");
	handler.addEnumeration("id", "Indonesian");
	handler.addEnumeration("ie", "Interlingue");
	handler.addEnumeration("ga", "Irish");
	handler.addEnumeration("ig", "Igbo");
	handler.addEnumeration("ik", "Inupiaq");
	handler.addEnumeration("io", "Ido");
	handler.addEnumeration("is", "Icelandic");
	handler.addEnumeration("it", "Italian");
	handler.addEnumeration("iu", "Inuktitut");
	handler.addEnumeration("ja", "Japanese");
	handler.addEnumeration("jv", "Javanese");
	handler.addEnumeration("kl", "Kalaallisut, Greenlandic");
	handler.addEnumeration("kn", "Kannada");
	handler.addEnumeration("kr", "Kanuri");
	handler.addEnumeration("ks", "Kashmiri");
	handler.addEnumeration("kk", "Kazakh");
	handler.addEnumeration("km", "Khmer");
	handler.addEnumeration("ki", "Kikuyu, Gikuyu");
	handler.addEnumeration("rw", "Kinyarwanda");
	handler.addEnumeration("ky", "Kyrgyz");
	handler.addEnumeration("kv", "Komi");
	handler.addEnumeration("kg", "Kongo");
	handler.addEnumeration("ko", "Korean");
	handler.addEnumeration("ku", "Kurdish");
	handler.addEnumeration("kj", "Kwanyama, Kuanyama");
	handler.addEnumeration("la", "Latin");
	handler.addEnumeration("lb", "Luxembourgish, Letzeburgesch");
	handler.addEnumeration("lg", "Ganda");
	handler.addEnumeration("li", "Limburgish, Limburgan, Limburger");
	handler.addEnumeration("ln", "Lingala");
	handler.addEnumeration("lo", "Lao");
	handler.addEnumeration("lt", "Lithuanian");
	handler.addEnumeration("lu", "Luba-Katanga");
	handler.addEnumeration("lv", "Latvian");
	handler.addEnumeration("gv", "Manx");
	handler.addEnumeration("mk", "Macedonian");
	handler.addEnumeration("mg", "Malagasy");
	handler.addEnumeration("ms", "Malay");
	handler.addEnumeration("ml", "Malayalam");
	handler.addEnumeration("mt", "Maltese");
	handler.addEnumeration("mi", "Māori");
	handler.addEnumeration("mr", "Marathi (Marāṭhī)");
	handler.addEnumeration("mh", "Marshallese");
	handler.addEnumeration("mn", "Mongolian");
	handler.addEnumeration("na", "Nauru");
	handler.addEnumeration("nv", "Navajo, Navaho");
	handler.addEnumeration("nb", "Norwegian Bokmål");
	handler.addEnumeration("nd", "North Ndebele");
	handler.addEnumeration("ne", "Nepali");
	handler.addEnumeration("ng", "Ndonga");
	handler.addEnumeration("nn", "Norwegian Nynorsk");
	handler.addEnumeration("no", "Norwegian");
	handler.addEnumeration("ii", "Nuosu");
	handler.addEnumeration("nr", "South Ndebele");
	handler.addEnumeration("oc", "Occitan");
	handler.addEnumeration("oj", "Ojibwe, Ojibwa");
	handler.addEnumeration("cu", "Old Church Slavonic, Church Slavic, Church Slavonic, Old Bulgarian, Old Slavonic");
	handler.addEnumeration("om", "Oromo");
	handler.addEnumeration("or", "Oriya");
	handler.addEnumeration("os", "Ossetian, Ossetic");
	handler.addEnumeration("pa", "Panjabi, Punjabi");
	handler.addEnumeration("pi", "Pāli");
	handler.addEnumeration("fa", "Persian");
	handler.addEnumeration("pl", "Polish");
	handler.addEnumeration("ps", "Pashto, Pushto");
	handler.addEnumeration("pt", "Portuguese");
	handler.addEnumeration("qu", "Quechua");
	handler.addEnumeration("rm", "Romansh");
	handler.addEnumeration("rn", "Kirundi");
	handler.addEnumeration("ro", "Romanian, Moldavian(Romanian from Republic of Moldova)");
	handler.addEnumeration("ru", "Russian");
	handler.addEnumeration("sa", "Sanskrit (Saṁskṛta)");
	handler.addEnumeration("sc", "Sardinian");
	handler.addEnumeration("sd", "Sindhi");
	handler.addEnumeration("se", "Northern Sami");
	handler.addEnumeration("sm", "Samoan");
	handler.addEnumeration("sg", "Sango");
	handler.addEnumeration("sr", "Serbian");
	handler.addEnumeration("gd", "Scottish Gaelic; Gaelic");
	handler.addEnumeration("sn", "Shona");
	handler.addEnumeration("si", "Sinhala, Sinhalese");
	handler.addEnumeration("sk", "Slovak");
	handler.addEnumeration("sl", "Slovene");
	handler.addEnumeration("so", "Somali");
	handler.addEnumeration("st", "Southern Sotho");
	handler.addEnumeration("es", "Spanish; Castilian");
	handler.addEnumeration("su", "Sundanese");
	handler.addEnumeration("sw", "Swahili");
	handler.addEnumeration("ss", "Swati");
	handler.addEnumeration("sv", "Swedish");
	handler.addEnumeration("ta", "Tamil");
	handler.addEnumeration("te", "Telugu");
	handler.addEnumeration("tg", "Tajik");
	handler.addEnumeration("th", "Thai");
	handler.addEnumeration("ti", "Tigrinya");
	handler.addEnumeration("bo", "Tibetan Standard, Tibetan, Central");
	handler.addEnumeration("tk", "Turkmen");
	handler.addEnumeration("tl", "Tagalog");
	handler.addEnumeration("tn", "Tswana");
	handler.addEnumeration("to", "Tonga (Tonga Islands)");
	handler.addEnumeration("tr", "Turkish");
	handler.addEnumeration("ts", "Tsonga");
	handler.addEnumeration("tt", "Tatar");
	handler.addEnumeration("tw", "Twi");
	handler.addEnumeration("ty", "Tahitian");
	handler.addEnumeration("ug", "Uighur, Uyghur");
	handler.addEnumeration("uk", "Ukrainian");
	handler.addEnumeration("ur", "Urdu");
	handler.addEnumeration("uz", "Uzbek");
	handler.addEnumeration("ve", "Venda");
	handler.addEnumeration("vi", "Vietnamese");
	handler.addEnumeration("vo", "Volapük");
	handler.addEnumeration("wa", "Walloon");
	handler.addEnumeration("cy", "Welsh");
	handler.addEnumeration("wo", "Wolof");
	handler.addEnumeration("fy", "Western Frisian");
	handler.addEnumeration("xh", "Xhosa");
	handler.addEnumeration("yi", "Yiddish");
	handler.addEnumeration("yo", "Yoruba");
	handler.addEnumeration("za", "Zhuang, Chuang");
	handler.addEnumeration("zu", "Zulu");
}





handlers = template.getHandlersForPrefixAndName("edm", "currentLocation");
edmCurrentLocation = handlers.get(0);
edmCurrentLocation.addEnumeration("AD", "Andorra");
edmCurrentLocation.addEnumeration("AE", "United Arab Emirates");
edmCurrentLocation.addEnumeration("AF", "Afghanistan");
edmCurrentLocation.addEnumeration("AG", "Antigua and Barbuda");
edmCurrentLocation.addEnumeration("AI", "Anguilla");
edmCurrentLocation.addEnumeration("AL", "Albania");
edmCurrentLocation.addEnumeration("AM", "Armenia");
edmCurrentLocation.addEnumeration("AO", "Angola");
edmCurrentLocation.addEnumeration("AQ", "Antarctica");
edmCurrentLocation.addEnumeration("AR", "Argentina");
edmCurrentLocation.addEnumeration("AS", "American Samoa");
edmCurrentLocation.addEnumeration("AT", "Austria");
edmCurrentLocation.addEnumeration("AU", "Australia");
edmCurrentLocation.addEnumeration("AW", "Aruba");
edmCurrentLocation.addEnumeration("AX", "Åland Islands");
edmCurrentLocation.addEnumeration("AZ", "Azerbaijan");
edmCurrentLocation.addEnumeration("BA", "Bosnia and Herzegovina");
edmCurrentLocation.addEnumeration("BB", "Barbados");
edmCurrentLocation.addEnumeration("BD", "Bangladesh");
edmCurrentLocation.addEnumeration("BE", "Belgium");
edmCurrentLocation.addEnumeration("BF", "Burkina Faso");
edmCurrentLocation.addEnumeration("BG", "Bulgaria");
edmCurrentLocation.addEnumeration("BH", "Bahrain");
edmCurrentLocation.addEnumeration("BI", "Burundi");
edmCurrentLocation.addEnumeration("BJ", "Benin");
edmCurrentLocation.addEnumeration("BL", "Saint Barthélemy");
edmCurrentLocation.addEnumeration("BM", "Bermuda");
edmCurrentLocation.addEnumeration("BN", "Brunei Darussalam");
edmCurrentLocation.addEnumeration("BO", "Bolivia, Plurinational State of");
edmCurrentLocation.addEnumeration("BQ", "Bonaire, Sint Eustatius and Saba");
edmCurrentLocation.addEnumeration("BR", "Brazil");
edmCurrentLocation.addEnumeration("BS", "Bahamas");
edmCurrentLocation.addEnumeration("BT", "Bhutan");
edmCurrentLocation.addEnumeration("BV", "Bouvet Island");
edmCurrentLocation.addEnumeration("BW", "Botswana");
edmCurrentLocation.addEnumeration("BY", "Belarus");
edmCurrentLocation.addEnumeration("BZ", "Belize");
edmCurrentLocation.addEnumeration("CA", "Canada");
edmCurrentLocation.addEnumeration("CC", "Cocos (Keeling) Islands");
edmCurrentLocation.addEnumeration("CD", "Congo, the Democratic Republic of the");
edmCurrentLocation.addEnumeration("CF", "Central African Republic");
edmCurrentLocation.addEnumeration("CG", "Congo");
edmCurrentLocation.addEnumeration("CH", "Switzerland");
edmCurrentLocation.addEnumeration("CI", "Côte d'Ivoire");
edmCurrentLocation.addEnumeration("CK", "Cook Islands");
edmCurrentLocation.addEnumeration("CL", "Chile");
edmCurrentLocation.addEnumeration("CM", "Cameroon");
edmCurrentLocation.addEnumeration("CN", "China");
edmCurrentLocation.addEnumeration("CO", "Colombia");
edmCurrentLocation.addEnumeration("CR", "Costa Rica");
edmCurrentLocation.addEnumeration("CU", "Cuba");
edmCurrentLocation.addEnumeration("CV", "Cape Verde");
edmCurrentLocation.addEnumeration("CW", "Curaçao");
edmCurrentLocation.addEnumeration("CX", "Christmas Island");
edmCurrentLocation.addEnumeration("CY", "Cyprus");
edmCurrentLocation.addEnumeration("CZ", "Czech Republic");
edmCurrentLocation.addEnumeration("DE", "Germany");
edmCurrentLocation.addEnumeration("DJ", "Djibouti");
edmCurrentLocation.addEnumeration("DK", "Denmark");
edmCurrentLocation.addEnumeration("DM", "Dominica");
edmCurrentLocation.addEnumeration("DO", "Dominican Republic");
edmCurrentLocation.addEnumeration("DZ", "Algeria");
edmCurrentLocation.addEnumeration("EC", "Ecuador");
edmCurrentLocation.addEnumeration("EE", "Estonia");
edmCurrentLocation.addEnumeration("EG", "Egypt");
edmCurrentLocation.addEnumeration("EH", "Western Sahara");
edmCurrentLocation.addEnumeration("ER", "Eritrea");
edmCurrentLocation.addEnumeration("ES", "Spain");
edmCurrentLocation.addEnumeration("ET", "Ethiopia");
edmCurrentLocation.addEnumeration("FI", "Finland");
edmCurrentLocation.addEnumeration("FJ", "Fiji");
edmCurrentLocation.addEnumeration("FK", "Falkland Islands (Malvinas)");
edmCurrentLocation.addEnumeration("FM", "Micronesia, Federated States of");
edmCurrentLocation.addEnumeration("FO", "Faroe Islands");
edmCurrentLocation.addEnumeration("FR", "France");
edmCurrentLocation.addEnumeration("GA", "Gabon");
edmCurrentLocation.addEnumeration("GB", "United Kingdom");
edmCurrentLocation.addEnumeration("GD", "Grenada");
edmCurrentLocation.addEnumeration("GE", "Georgia");
edmCurrentLocation.addEnumeration("GF", "French Guiana");
edmCurrentLocation.addEnumeration("GG", "Guernsey");
edmCurrentLocation.addEnumeration("GH", "Ghana");
edmCurrentLocation.addEnumeration("GI", "Gibraltar");
edmCurrentLocation.addEnumeration("GL", "Greenland");
edmCurrentLocation.addEnumeration("GM", "Gambia");
edmCurrentLocation.addEnumeration("GN", "Guinea");
edmCurrentLocation.addEnumeration("GP", "Guadeloupe");
edmCurrentLocation.addEnumeration("GQ", "Equatorial Guinea");
edmCurrentLocation.addEnumeration("GR", "Greece");
edmCurrentLocation.addEnumeration("GS", "South Georgia and the South Sandwich Islands");
edmCurrentLocation.addEnumeration("GT", "Guatemala");
edmCurrentLocation.addEnumeration("GU", "Guam");
edmCurrentLocation.addEnumeration("GW", "Guinea-Bissau");
edmCurrentLocation.addEnumeration("GY", "Guyana");
edmCurrentLocation.addEnumeration("HK", "Hong Kong");
edmCurrentLocation.addEnumeration("HM", "Heard Island and McDonald Islands");
edmCurrentLocation.addEnumeration("HN", "Honduras");
edmCurrentLocation.addEnumeration("HR", "Croatia");
edmCurrentLocation.addEnumeration("HT", "Haiti");
edmCurrentLocation.addEnumeration("HU", "Hungary");
edmCurrentLocation.addEnumeration("ID", "Indonesia");
edmCurrentLocation.addEnumeration("IE", "Ireland");
edmCurrentLocation.addEnumeration("IL", "Israel");
edmCurrentLocation.addEnumeration("IM", "Isle of Man");
edmCurrentLocation.addEnumeration("IN", "India");
edmCurrentLocation.addEnumeration("IO", "British Indian Ocean Territory");
edmCurrentLocation.addEnumeration("IQ", "Iraq");
edmCurrentLocation.addEnumeration("IR", "Iran, Islamic Republic of");
edmCurrentLocation.addEnumeration("IS", "Iceland");
edmCurrentLocation.addEnumeration("IT", "Italy");
edmCurrentLocation.addEnumeration("JE", "Jersey");
edmCurrentLocation.addEnumeration("JM", "Jamaica");
edmCurrentLocation.addEnumeration("JO", "Jordan");
edmCurrentLocation.addEnumeration("JP", "Japan");
edmCurrentLocation.addEnumeration("KE", "Kenya");
edmCurrentLocation.addEnumeration("KG", "Kyrgyzstan");
edmCurrentLocation.addEnumeration("KH", "Cambodia");
edmCurrentLocation.addEnumeration("KI", "Kiribati");
edmCurrentLocation.addEnumeration("KM", "Comoros");
edmCurrentLocation.addEnumeration("KN", "Saint Kitts and Nevis");
edmCurrentLocation.addEnumeration("KP", "Korea, Democratic People's Republic of");
edmCurrentLocation.addEnumeration("KR", "Korea, Republic of");
edmCurrentLocation.addEnumeration("KW", "Kuwait");
edmCurrentLocation.addEnumeration("KY", "Cayman Islands");
edmCurrentLocation.addEnumeration("KZ", "Kazakhstan");
edmCurrentLocation.addEnumeration("LA", "Lao People's Democratic Republic");
edmCurrentLocation.addEnumeration("LB", "Lebanon");
edmCurrentLocation.addEnumeration("LC", "Saint Lucia");
edmCurrentLocation.addEnumeration("LI", "Liechtenstein");
edmCurrentLocation.addEnumeration("LK", "Sri Lanka");
edmCurrentLocation.addEnumeration("LR", "Liberia");
edmCurrentLocation.addEnumeration("LS", "Lesotho");
edmCurrentLocation.addEnumeration("LT", "Lithuania");
edmCurrentLocation.addEnumeration("LU", "Luxembourg");
edmCurrentLocation.addEnumeration("LV", "Latvia");
edmCurrentLocation.addEnumeration("LY", "Libya");
edmCurrentLocation.addEnumeration("MA", "Morocco");
edmCurrentLocation.addEnumeration("MC", "Monaco");
edmCurrentLocation.addEnumeration("MD", "Moldova, Republic of");
edmCurrentLocation.addEnumeration("ME", "Montenegro");
edmCurrentLocation.addEnumeration("MF", "Saint Martin (French part)");
edmCurrentLocation.addEnumeration("MG", "Madagascar");
edmCurrentLocation.addEnumeration("MH", "Marshall Islands");
edmCurrentLocation.addEnumeration("MK", "Macedonia, the former Yugoslav Republic of");
edmCurrentLocation.addEnumeration("ML", "Mali");
edmCurrentLocation.addEnumeration("MM", "Myanmar");
edmCurrentLocation.addEnumeration("MN", "Mongolia");
edmCurrentLocation.addEnumeration("MO", "Macao");
edmCurrentLocation.addEnumeration("MP", "Northern Mariana Islands");
edmCurrentLocation.addEnumeration("MQ", "Martinique");
edmCurrentLocation.addEnumeration("MR", "Mauritania");
edmCurrentLocation.addEnumeration("MS", "Montserrat");
edmCurrentLocation.addEnumeration("MT", "Malta");
edmCurrentLocation.addEnumeration("MU", "Mauritius");
edmCurrentLocation.addEnumeration("MV", "Maldives");
edmCurrentLocation.addEnumeration("MW", "Malawi");
edmCurrentLocation.addEnumeration("MX", "Mexico");
edmCurrentLocation.addEnumeration("MY", "Malaysia");
edmCurrentLocation.addEnumeration("MZ", "Mozambique");
edmCurrentLocation.addEnumeration("NA", "Namibia");
edmCurrentLocation.addEnumeration("NC", "New Caledonia");
edmCurrentLocation.addEnumeration("NE", "Niger");
edmCurrentLocation.addEnumeration("NF", "Norfolk Island");
edmCurrentLocation.addEnumeration("NG", "Nigeria");
edmCurrentLocation.addEnumeration("NI", "Nicaragua");
edmCurrentLocation.addEnumeration("NL", "Netherlands");
edmCurrentLocation.addEnumeration("NO", "Norway");
edmCurrentLocation.addEnumeration("NP", "Nepal");
edmCurrentLocation.addEnumeration("NR", "Nauru");
edmCurrentLocation.addEnumeration("NU", "Niue");
edmCurrentLocation.addEnumeration("NZ", "New Zealand");
edmCurrentLocation.addEnumeration("OM", "Oman");
edmCurrentLocation.addEnumeration("PA", "Panama");
edmCurrentLocation.addEnumeration("PE", "Peru");
edmCurrentLocation.addEnumeration("PF", "French Polynesia");
edmCurrentLocation.addEnumeration("PG", "Papua New Guinea");
edmCurrentLocation.addEnumeration("PH", "Philippines");
edmCurrentLocation.addEnumeration("PK", "Pakistan");
edmCurrentLocation.addEnumeration("PL", "Poland");
edmCurrentLocation.addEnumeration("PM", "Saint Pierre and Miquelon");
edmCurrentLocation.addEnumeration("PN", "Pitcairn");
edmCurrentLocation.addEnumeration("PR", "Puerto Rico");
edmCurrentLocation.addEnumeration("PS", "Palestine, State of");
edmCurrentLocation.addEnumeration("Consists of the West Bank and the Gaza Strip", "");
edmCurrentLocation.addEnumeration("PT", "Portugal");
edmCurrentLocation.addEnumeration("PW", "Palau");
edmCurrentLocation.addEnumeration("PY", "Paraguay");
edmCurrentLocation.addEnumeration("QA", "Qatar");
edmCurrentLocation.addEnumeration("RE", "Réunion");
edmCurrentLocation.addEnumeration("RO", "Romania");
edmCurrentLocation.addEnumeration("RS", "Serbia");
edmCurrentLocation.addEnumeration("RU", "Russian Federation");
edmCurrentLocation.addEnumeration("RW", "Rwanda");
edmCurrentLocation.addEnumeration("SA", "Saudi Arabia");
edmCurrentLocation.addEnumeration("SB", "Solomon Islands");
edmCurrentLocation.addEnumeration("SC", "Seychelles");
edmCurrentLocation.addEnumeration("SD", "Sudan");
edmCurrentLocation.addEnumeration("SE", "Sweden");
edmCurrentLocation.addEnumeration("SG", "Singapore");
edmCurrentLocation.addEnumeration("SH", "Saint Helena, Ascension and Tristan da Cunha");
edmCurrentLocation.addEnumeration("SI", "Slovenia");
edmCurrentLocation.addEnumeration("SJ", "Svalbard and Jan Mayen");
edmCurrentLocation.addEnumeration("SK", "Slovakia");
edmCurrentLocation.addEnumeration("SL", "Sierra Leone");
edmCurrentLocation.addEnumeration("SM", "San Marino");
edmCurrentLocation.addEnumeration("SN", "Senegal");
edmCurrentLocation.addEnumeration("SO", "Somalia");
edmCurrentLocation.addEnumeration("SR", "Suriname");
edmCurrentLocation.addEnumeration("SS", "South Sudan");
edmCurrentLocation.addEnumeration("ST", "Sao Tome and Principe");
edmCurrentLocation.addEnumeration("SV", "El Salvador");
edmCurrentLocation.addEnumeration("SX", "Sint Maarten (Dutch part)");
edmCurrentLocation.addEnumeration("SY", "Syrian Arab Republic");
edmCurrentLocation.addEnumeration("SZ", "Swaziland");
edmCurrentLocation.addEnumeration("TC", "Turks and Caicos Islands");
edmCurrentLocation.addEnumeration("TD", "Chad");
edmCurrentLocation.addEnumeration("TF", "French Southern Territories");
edmCurrentLocation.addEnumeration("TG", "Togo");
edmCurrentLocation.addEnumeration("TH", "Thailand");
edmCurrentLocation.addEnumeration("TJ", "Tajikistan");
edmCurrentLocation.addEnumeration("TK", "Tokelau");
edmCurrentLocation.addEnumeration("TL", "Timor-Leste");
edmCurrentLocation.addEnumeration("TM", "Turkmenistan");
edmCurrentLocation.addEnumeration("TN", "Tunisia");
edmCurrentLocation.addEnumeration("TO", "Tonga");
edmCurrentLocation.addEnumeration("TR", "Turkey");
edmCurrentLocation.addEnumeration("TT", "Trinidad and Tobago");
edmCurrentLocation.addEnumeration("TV", "Tuvalu");
edmCurrentLocation.addEnumeration("TW", "Taiwan, Province of China");
edmCurrentLocation.addEnumeration("ISO country name follows UN designation (due to political status of Taiwan within the UN)[18]", "");
edmCurrentLocation.addEnumeration("TZ", "Tanzania, United Republic of");
edmCurrentLocation.addEnumeration("UA", "Ukraine");
edmCurrentLocation.addEnumeration("UG", "Uganda");
edmCurrentLocation.addEnumeration("UM", "United States Minor Outlying Islands");
edmCurrentLocation.addEnumeration("US", "United States");
edmCurrentLocation.addEnumeration("UY", "Uruguay");
edmCurrentLocation.addEnumeration("UZ", "Uzbekistan");
edmCurrentLocation.addEnumeration("VA", "Holy See (Vatican City State)");
edmCurrentLocation.addEnumeration("VC", "Saint Vincent and the Grenadines");
edmCurrentLocation.addEnumeration("VE", "Venezuela, Bolivarian Republic of");
edmCurrentLocation.addEnumeration("VG", "Virgin Islands, British");
edmCurrentLocation.addEnumeration("VI", "Virgin Islands, U.S.");
edmCurrentLocation.addEnumeration("VN", "Viet Nam");
edmCurrentLocation.addEnumeration("VU", "Vanuatu");
edmCurrentLocation.addEnumeration("WF", "Wallis and Futuna");
edmCurrentLocation.addEnumeration("WS", "Samoa");
edmCurrentLocation.addEnumeration("YE", "Yemen");
edmCurrentLocation.addEnumeration("YT", "Mayotte");
edmCurrentLocation.addEnumeration("ZA", "South Africa");
edmCurrentLocation.addEnumeration("ZM", "Zambia");
edmCurrentLocation.addEnumeration("ZW", "Zimbabwe");
edmCurrentLocation.addEnumeration("US-AL", " Alabama");
edmCurrentLocation.addEnumeration("US-AK", " Alaska");
edmCurrentLocation.addEnumeration("US-AZ", " Arizona");
edmCurrentLocation.addEnumeration("US-AR", " Arkansas");
edmCurrentLocation.addEnumeration("US-CA", " California");
edmCurrentLocation.addEnumeration("US-CO", " Colorado");
edmCurrentLocation.addEnumeration("US-CT", " Connecticut");
edmCurrentLocation.addEnumeration("US-DE", " Delaware");
edmCurrentLocation.addEnumeration("US-FL", " Florida");
edmCurrentLocation.addEnumeration("US-GA", " Georgia");
edmCurrentLocation.addEnumeration("US-HI", " Hawaii");
edmCurrentLocation.addEnumeration("US-ID", " Idaho");
edmCurrentLocation.addEnumeration("US-IL", " Illinois");
edmCurrentLocation.addEnumeration("US-IN", " Indiana");
edmCurrentLocation.addEnumeration("US-IA", " Iowa");
edmCurrentLocation.addEnumeration("US-KS", " Kansas");
edmCurrentLocation.addEnumeration("US-KY", " Kentucky");
edmCurrentLocation.addEnumeration("US-LA", " Louisiana");
edmCurrentLocation.addEnumeration("US-ME", " Maine");
edmCurrentLocation.addEnumeration("US-MD", " Maryland");
edmCurrentLocation.addEnumeration("US-MA", " Massachusetts");
edmCurrentLocation.addEnumeration("US-MI", " Michigan");
edmCurrentLocation.addEnumeration("US-MN", " Minnesota");
edmCurrentLocation.addEnumeration("US-MS", " Mississippi");
edmCurrentLocation.addEnumeration("US-MO", " Missouri");
edmCurrentLocation.addEnumeration("US-MT", " Montana");
edmCurrentLocation.addEnumeration("US-NE", " Nebraska");
edmCurrentLocation.addEnumeration("US-NV", " Nevada");
edmCurrentLocation.addEnumeration("US-NH", " New Hampshire");
edmCurrentLocation.addEnumeration("US-NJ", " New Jersey");
edmCurrentLocation.addEnumeration("US-NM", " New Mexico");
edmCurrentLocation.addEnumeration("US-NY", " New York");
edmCurrentLocation.addEnumeration("US-NC", " North Carolina");
edmCurrentLocation.addEnumeration("US-ND", " North Dakota");
edmCurrentLocation.addEnumeration("US-OH", " Ohio");
edmCurrentLocation.addEnumeration("US-OK", " Oklahoma");
edmCurrentLocation.addEnumeration("US-OR", " Oregon");
edmCurrentLocation.addEnumeration("US-PA", " Pennsylvania");
edmCurrentLocation.addEnumeration("US-RI", " Rhode Island");
edmCurrentLocation.addEnumeration("US-SC", " South Carolina");
edmCurrentLocation.addEnumeration("US-SD", " South Dakota");
edmCurrentLocation.addEnumeration("US-TN", " Tennessee");
edmCurrentLocation.addEnumeration("US-TX", " Texas");
edmCurrentLocation.addEnumeration("US-UT", " Utah");
edmCurrentLocation.addEnumeration("US-VT", " Vermont");
edmCurrentLocation.addEnumeration("US-VA", " Virginia");
edmCurrentLocation.addEnumeration("US-WA", " Washington");
edmCurrentLocation.addEnumeration("US-WV", " West Virginia");
edmCurrentLocation.addEnumeration("US-WI", " Wisconsin");
edmCurrentLocation.addEnumeration("US-WY", " Wyoming");
edmCurrentLocation.addEnumeration("US-DC", " District of Columbia");
edmCurrentLocation.addEnumeration("US-AS", " American Samoa");
edmCurrentLocation.addEnumeration("US-GU", " Guam");
edmCurrentLocation.addEnumeration("US-MP", " Northern Mariana Islands");
edmCurrentLocation.addEnumeration("US-PR", " Puerto Rico");
edmCurrentLocation.addEnumeration("US-UM", " United States Minor Outlying Islands");
edmCurrentLocation.addEnumeration("US-VI", " Virgin Islands, U.S.");

handlers = template.getHandlersForPrefixAndName("dpla", "country");
dplaCountry = handlers.get(0);
dplaCountry.addEnumeration("AD", "Andorra");
dplaCountry.addEnumeration("AE", "United Arab Emirates");
dplaCountry.addEnumeration("AF", "Afghanistan");
dplaCountry.addEnumeration("AG", "Antigua and Barbuda");
dplaCountry.addEnumeration("AI", "Anguilla");
dplaCountry.addEnumeration("AL", "Albania");
dplaCountry.addEnumeration("AM", "Armenia");
dplaCountry.addEnumeration("AO", "Angola");
dplaCountry.addEnumeration("AQ", "Antarctica");
dplaCountry.addEnumeration("AR", "Argentina");
dplaCountry.addEnumeration("AS", "American Samoa");
dplaCountry.addEnumeration("AT", "Austria");
dplaCountry.addEnumeration("AU", "Australia");
dplaCountry.addEnumeration("AW", "Aruba");
dplaCountry.addEnumeration("AX", "Åland Islands");
dplaCountry.addEnumeration("AZ", "Azerbaijan");
dplaCountry.addEnumeration("BA", "Bosnia and Herzegovina");
dplaCountry.addEnumeration("BB", "Barbados");
dplaCountry.addEnumeration("BD", "Bangladesh");
dplaCountry.addEnumeration("BE", "Belgium");
dplaCountry.addEnumeration("BF", "Burkina Faso");
dplaCountry.addEnumeration("BG", "Bulgaria");
dplaCountry.addEnumeration("BH", "Bahrain");
dplaCountry.addEnumeration("BI", "Burundi");
dplaCountry.addEnumeration("BJ", "Benin");
dplaCountry.addEnumeration("BL", "Saint Barthélemy");
dplaCountry.addEnumeration("BM", "Bermuda");
dplaCountry.addEnumeration("BN", "Brunei Darussalam");
dplaCountry.addEnumeration("BO", "Bolivia, Plurinational State of");
dplaCountry.addEnumeration("BQ", "Bonaire, Sint Eustatius and Saba");
dplaCountry.addEnumeration("BR", "Brazil");
dplaCountry.addEnumeration("BS", "Bahamas");
dplaCountry.addEnumeration("BT", "Bhutan");
dplaCountry.addEnumeration("BV", "Bouvet Island");
dplaCountry.addEnumeration("BW", "Botswana");
dplaCountry.addEnumeration("BY", "Belarus");
dplaCountry.addEnumeration("BZ", "Belize");
dplaCountry.addEnumeration("CA", "Canada");
dplaCountry.addEnumeration("CC", "Cocos (Keeling) Islands");
dplaCountry.addEnumeration("CD", "Congo, the Democratic Republic of the");
dplaCountry.addEnumeration("CF", "Central African Republic");
dplaCountry.addEnumeration("CG", "Congo");
dplaCountry.addEnumeration("CH", "Switzerland");
dplaCountry.addEnumeration("CI", "Côte d'Ivoire");
dplaCountry.addEnumeration("CK", "Cook Islands");
dplaCountry.addEnumeration("CL", "Chile");
dplaCountry.addEnumeration("CM", "Cameroon");
dplaCountry.addEnumeration("CN", "China");
dplaCountry.addEnumeration("CO", "Colombia");
dplaCountry.addEnumeration("CR", "Costa Rica");
dplaCountry.addEnumeration("CU", "Cuba");
dplaCountry.addEnumeration("CV", "Cape Verde");
dplaCountry.addEnumeration("CW", "Curaçao");
dplaCountry.addEnumeration("CX", "Christmas Island");
dplaCountry.addEnumeration("CY", "Cyprus");
dplaCountry.addEnumeration("CZ", "Czech Republic");
dplaCountry.addEnumeration("DE", "Germany");
dplaCountry.addEnumeration("DJ", "Djibouti");
dplaCountry.addEnumeration("DK", "Denmark");
dplaCountry.addEnumeration("DM", "Dominica");
dplaCountry.addEnumeration("DO", "Dominican Republic");
dplaCountry.addEnumeration("DZ", "Algeria");
dplaCountry.addEnumeration("EC", "Ecuador");
dplaCountry.addEnumeration("EE", "Estonia");
dplaCountry.addEnumeration("EG", "Egypt");
dplaCountry.addEnumeration("EH", "Western Sahara");
dplaCountry.addEnumeration("ER", "Eritrea");
dplaCountry.addEnumeration("ES", "Spain");
dplaCountry.addEnumeration("ET", "Ethiopia");
dplaCountry.addEnumeration("FI", "Finland");
dplaCountry.addEnumeration("FJ", "Fiji");
dplaCountry.addEnumeration("FK", "Falkland Islands (Malvinas)");
dplaCountry.addEnumeration("FM", "Micronesia, Federated States of");
dplaCountry.addEnumeration("FO", "Faroe Islands");
dplaCountry.addEnumeration("FR", "France");
dplaCountry.addEnumeration("GA", "Gabon");
dplaCountry.addEnumeration("GB", "United Kingdom");
dplaCountry.addEnumeration("GD", "Grenada");
dplaCountry.addEnumeration("GE", "Georgia");
dplaCountry.addEnumeration("GF", "French Guiana");
dplaCountry.addEnumeration("GG", "Guernsey");
dplaCountry.addEnumeration("GH", "Ghana");
dplaCountry.addEnumeration("GI", "Gibraltar");
dplaCountry.addEnumeration("GL", "Greenland");
dplaCountry.addEnumeration("GM", "Gambia");
dplaCountry.addEnumeration("GN", "Guinea");
dplaCountry.addEnumeration("GP", "Guadeloupe");
dplaCountry.addEnumeration("GQ", "Equatorial Guinea");
dplaCountry.addEnumeration("GR", "Greece");
dplaCountry.addEnumeration("GS", "South Georgia and the South Sandwich Islands");
dplaCountry.addEnumeration("GT", "Guatemala");
dplaCountry.addEnumeration("GU", "Guam");
dplaCountry.addEnumeration("GW", "Guinea-Bissau");
dplaCountry.addEnumeration("GY", "Guyana");
dplaCountry.addEnumeration("HK", "Hong Kong");
dplaCountry.addEnumeration("HM", "Heard Island and McDonald Islands");
dplaCountry.addEnumeration("HN", "Honduras");
dplaCountry.addEnumeration("HR", "Croatia");
dplaCountry.addEnumeration("HT", "Haiti");
dplaCountry.addEnumeration("HU", "Hungary");
dplaCountry.addEnumeration("ID", "Indonesia");
dplaCountry.addEnumeration("IE", "Ireland");
dplaCountry.addEnumeration("IL", "Israel");
dplaCountry.addEnumeration("IM", "Isle of Man");
dplaCountry.addEnumeration("IN", "India");
dplaCountry.addEnumeration("IO", "British Indian Ocean Territory");
dplaCountry.addEnumeration("IQ", "Iraq");
dplaCountry.addEnumeration("IR", "Iran, Islamic Republic of");
dplaCountry.addEnumeration("IS", "Iceland");
dplaCountry.addEnumeration("IT", "Italy");
dplaCountry.addEnumeration("JE", "Jersey");
dplaCountry.addEnumeration("JM", "Jamaica");
dplaCountry.addEnumeration("JO", "Jordan");
dplaCountry.addEnumeration("JP", "Japan");
dplaCountry.addEnumeration("KE", "Kenya");
dplaCountry.addEnumeration("KG", "Kyrgyzstan");
dplaCountry.addEnumeration("KH", "Cambodia");
dplaCountry.addEnumeration("KI", "Kiribati");
dplaCountry.addEnumeration("KM", "Comoros");
dplaCountry.addEnumeration("KN", "Saint Kitts and Nevis");
dplaCountry.addEnumeration("KP", "Korea, Democratic People's Republic of");
dplaCountry.addEnumeration("KR", "Korea, Republic of");
dplaCountry.addEnumeration("KW", "Kuwait");
dplaCountry.addEnumeration("KY", "Cayman Islands");
dplaCountry.addEnumeration("KZ", "Kazakhstan");
dplaCountry.addEnumeration("LA", "Lao People's Democratic Republic");
dplaCountry.addEnumeration("LB", "Lebanon");
dplaCountry.addEnumeration("LC", "Saint Lucia");
dplaCountry.addEnumeration("LI", "Liechtenstein");
dplaCountry.addEnumeration("LK", "Sri Lanka");
dplaCountry.addEnumeration("LR", "Liberia");
dplaCountry.addEnumeration("LS", "Lesotho");
dplaCountry.addEnumeration("LT", "Lithuania");
dplaCountry.addEnumeration("LU", "Luxembourg");
dplaCountry.addEnumeration("LV", "Latvia");
dplaCountry.addEnumeration("LY", "Libya");
dplaCountry.addEnumeration("MA", "Morocco");
dplaCountry.addEnumeration("MC", "Monaco");
dplaCountry.addEnumeration("MD", "Moldova, Republic of");
dplaCountry.addEnumeration("ME", "Montenegro");
dplaCountry.addEnumeration("MF", "Saint Martin (French part)");
dplaCountry.addEnumeration("MG", "Madagascar");
dplaCountry.addEnumeration("MH", "Marshall Islands");
dplaCountry.addEnumeration("MK", "Macedonia, the former Yugoslav Republic of");
dplaCountry.addEnumeration("ML", "Mali");
dplaCountry.addEnumeration("MM", "Myanmar");
dplaCountry.addEnumeration("MN", "Mongolia");
dplaCountry.addEnumeration("MO", "Macao");
dplaCountry.addEnumeration("MP", "Northern Mariana Islands");
dplaCountry.addEnumeration("MQ", "Martinique");
dplaCountry.addEnumeration("MR", "Mauritania");
dplaCountry.addEnumeration("MS", "Montserrat");
dplaCountry.addEnumeration("MT", "Malta");
dplaCountry.addEnumeration("MU", "Mauritius");
dplaCountry.addEnumeration("MV", "Maldives");
dplaCountry.addEnumeration("MW", "Malawi");
dplaCountry.addEnumeration("MX", "Mexico");
dplaCountry.addEnumeration("MY", "Malaysia");
dplaCountry.addEnumeration("MZ", "Mozambique");
dplaCountry.addEnumeration("NA", "Namibia");
dplaCountry.addEnumeration("NC", "New Caledonia");
dplaCountry.addEnumeration("NE", "Niger");
dplaCountry.addEnumeration("NF", "Norfolk Island");
dplaCountry.addEnumeration("NG", "Nigeria");
dplaCountry.addEnumeration("NI", "Nicaragua");
dplaCountry.addEnumeration("NL", "Netherlands");
dplaCountry.addEnumeration("NO", "Norway");
dplaCountry.addEnumeration("NP", "Nepal");
dplaCountry.addEnumeration("NR", "Nauru");
dplaCountry.addEnumeration("NU", "Niue");
dplaCountry.addEnumeration("NZ", "New Zealand");
dplaCountry.addEnumeration("OM", "Oman");
dplaCountry.addEnumeration("PA", "Panama");
dplaCountry.addEnumeration("PE", "Peru");
dplaCountry.addEnumeration("PF", "French Polynesia");
dplaCountry.addEnumeration("PG", "Papua New Guinea");
dplaCountry.addEnumeration("PH", "Philippines");
dplaCountry.addEnumeration("PK", "Pakistan");
dplaCountry.addEnumeration("PL", "Poland");
dplaCountry.addEnumeration("PM", "Saint Pierre and Miquelon");
dplaCountry.addEnumeration("PN", "Pitcairn");
dplaCountry.addEnumeration("PR", "Puerto Rico");
dplaCountry.addEnumeration("PS", "Palestine, State of");
dplaCountry.addEnumeration("Consists of the West Bank and the Gaza Strip", "");
dplaCountry.addEnumeration("PT", "Portugal");
dplaCountry.addEnumeration("PW", "Palau");
dplaCountry.addEnumeration("PY", "Paraguay");
dplaCountry.addEnumeration("QA", "Qatar");
dplaCountry.addEnumeration("RE", "Réunion");
dplaCountry.addEnumeration("RO", "Romania");
dplaCountry.addEnumeration("RS", "Serbia");
dplaCountry.addEnumeration("RU", "Russian Federation");
dplaCountry.addEnumeration("RW", "Rwanda");
dplaCountry.addEnumeration("SA", "Saudi Arabia");
dplaCountry.addEnumeration("SB", "Solomon Islands");
dplaCountry.addEnumeration("SC", "Seychelles");
dplaCountry.addEnumeration("SD", "Sudan");
dplaCountry.addEnumeration("SE", "Sweden");
dplaCountry.addEnumeration("SG", "Singapore");
dplaCountry.addEnumeration("SH", "Saint Helena, Ascension and Tristan da Cunha");
dplaCountry.addEnumeration("SI", "Slovenia");
dplaCountry.addEnumeration("SJ", "Svalbard and Jan Mayen");
dplaCountry.addEnumeration("SK", "Slovakia");
dplaCountry.addEnumeration("SL", "Sierra Leone");
dplaCountry.addEnumeration("SM", "San Marino");
dplaCountry.addEnumeration("SN", "Senegal");
dplaCountry.addEnumeration("SO", "Somalia");
dplaCountry.addEnumeration("SR", "Suriname");
dplaCountry.addEnumeration("SS", "South Sudan");
dplaCountry.addEnumeration("ST", "Sao Tome and Principe");
dplaCountry.addEnumeration("SV", "El Salvador");
dplaCountry.addEnumeration("SX", "Sint Maarten (Dutch part)");
dplaCountry.addEnumeration("SY", "Syrian Arab Republic");
dplaCountry.addEnumeration("SZ", "Swaziland");
dplaCountry.addEnumeration("TC", "Turks and Caicos Islands");
dplaCountry.addEnumeration("TD", "Chad");
dplaCountry.addEnumeration("TF", "French Southern Territories");
dplaCountry.addEnumeration("TG", "Togo");
dplaCountry.addEnumeration("TH", "Thailand");
dplaCountry.addEnumeration("TJ", "Tajikistan");
dplaCountry.addEnumeration("TK", "Tokelau");
dplaCountry.addEnumeration("TL", "Timor-Leste");
dplaCountry.addEnumeration("TM", "Turkmenistan");
dplaCountry.addEnumeration("TN", "Tunisia");
dplaCountry.addEnumeration("TO", "Tonga");
dplaCountry.addEnumeration("TR", "Turkey");
dplaCountry.addEnumeration("TT", "Trinidad and Tobago");
dplaCountry.addEnumeration("TV", "Tuvalu");
dplaCountry.addEnumeration("TW", "Taiwan, Province of China");
dplaCountry.addEnumeration("ISO country name follows UN designation (due to political status of Taiwan within the UN)[18]", "");
dplaCountry.addEnumeration("TZ", "Tanzania, United Republic of");
dplaCountry.addEnumeration("UA", "Ukraine");
dplaCountry.addEnumeration("UG", "Uganda");
dplaCountry.addEnumeration("UM", "United States Minor Outlying Islands");
dplaCountry.addEnumeration("US", "United States");
dplaCountry.addEnumeration("UY", "Uruguay");
dplaCountry.addEnumeration("UZ", "Uzbekistan");
dplaCountry.addEnumeration("VA", "Holy See (Vatican City State)");
dplaCountry.addEnumeration("VC", "Saint Vincent and the Grenadines");
dplaCountry.addEnumeration("VE", "Venezuela, Bolivarian Republic of");
dplaCountry.addEnumeration("VG", "Virgin Islands, British");
dplaCountry.addEnumeration("VI", "Virgin Islands, U.S.");
dplaCountry.addEnumeration("VN", "Viet Nam");
dplaCountry.addEnumeration("VU", "Vanuatu");
dplaCountry.addEnumeration("WF", "Wallis and Futuna");
dplaCountry.addEnumeration("WS", "Samoa");
dplaCountry.addEnumeration("YE", "Yemen");
dplaCountry.addEnumeration("YT", "Mayotte");
dplaCountry.addEnumeration("ZA", "South Africa");
dplaCountry.addEnumeration("ZM", "Zambia");
dplaCountry.addEnumeration("ZW", "Zimbabwe");
dplaCountry.addEnumeration("US-AL", " Alabama");
dplaCountry.addEnumeration("US-AK", " Alaska");
dplaCountry.addEnumeration("US-AZ", " Arizona");
dplaCountry.addEnumeration("US-AR", " Arkansas");
dplaCountry.addEnumeration("US-CA", " California");
dplaCountry.addEnumeration("US-CO", " Colorado");
dplaCountry.addEnumeration("US-CT", " Connecticut");
dplaCountry.addEnumeration("US-DE", " Delaware");
dplaCountry.addEnumeration("US-FL", " Florida");
dplaCountry.addEnumeration("US-GA", " Georgia");
dplaCountry.addEnumeration("US-HI", " Hawaii");
dplaCountry.addEnumeration("US-ID", " Idaho");
dplaCountry.addEnumeration("US-IL", " Illinois");
dplaCountry.addEnumeration("US-IN", " Indiana");
dplaCountry.addEnumeration("US-IA", " Iowa");
dplaCountry.addEnumeration("US-KS", " Kansas");
dplaCountry.addEnumeration("US-KY", " Kentucky");
dplaCountry.addEnumeration("US-LA", " Louisiana");
dplaCountry.addEnumeration("US-ME", " Maine");
dplaCountry.addEnumeration("US-MD", " Maryland");
dplaCountry.addEnumeration("US-MA", " Massachusetts");
dplaCountry.addEnumeration("US-MI", " Michigan");
dplaCountry.addEnumeration("US-MN", " Minnesota");
dplaCountry.addEnumeration("US-MS", " Mississippi");
dplaCountry.addEnumeration("US-MO", " Missouri");
dplaCountry.addEnumeration("US-MT", " Montana");
dplaCountry.addEnumeration("US-NE", " Nebraska");
dplaCountry.addEnumeration("US-NV", " Nevada");
dplaCountry.addEnumeration("US-NH", " New Hampshire");
dplaCountry.addEnumeration("US-NJ", " New Jersey");
dplaCountry.addEnumeration("US-NM", " New Mexico");
dplaCountry.addEnumeration("US-NY", " New York");
dplaCountry.addEnumeration("US-NC", " North Carolina");
dplaCountry.addEnumeration("US-ND", " North Dakota");
dplaCountry.addEnumeration("US-OH", " Ohio");
dplaCountry.addEnumeration("US-OK", " Oklahoma");
dplaCountry.addEnumeration("US-OR", " Oregon");
dplaCountry.addEnumeration("US-PA", " Pennsylvania");
dplaCountry.addEnumeration("US-RI", " Rhode Island");
dplaCountry.addEnumeration("US-SC", " South Carolina");
dplaCountry.addEnumeration("US-SD", " South Dakota");
dplaCountry.addEnumeration("US-TN", " Tennessee");
dplaCountry.addEnumeration("US-TX", " Texas");
dplaCountry.addEnumeration("US-UT", " Utah");
dplaCountry.addEnumeration("US-VT", " Vermont");
dplaCountry.addEnumeration("US-VA", " Virginia");
dplaCountry.addEnumeration("US-WA", " Washington");
dplaCountry.addEnumeration("US-WV", " West Virginia");
dplaCountry.addEnumeration("US-WI", " Wisconsin");
dplaCountry.addEnumeration("US-WY", " Wyoming");
dplaCountry.addEnumeration("US-DC", " District of Columbia");
dplaCountry.addEnumeration("US-AS", " American Samoa");
dplaCountry.addEnumeration("US-GU", " Guam");
dplaCountry.addEnumeration("US-MP", " Northern Mariana Islands");
dplaCountry.addEnumeration("US-PR", " Puerto Rico");
dplaCountry.addEnumeration("US-UM", " United States Minor Outlying Islands");
dplaCountry.addEnumeration("US-VI", " Virgin Islands, U.S.");

handlers = template.getHandlersForPrefixAndName("dpla", "state");
dplaState = handlers.get(0);
dplaState.addEnumeration("US-AL", " Alabama");
dplaState.addEnumeration("US-AK", " Alaska");
dplaState.addEnumeration("US-AZ", " Arizona");
dplaState.addEnumeration("US-AR", " Arkansas");
dplaState.addEnumeration("US-CA", " California");
dplaState.addEnumeration("US-CO", " Colorado");
dplaState.addEnumeration("US-CT", " Connecticut");
dplaState.addEnumeration("US-DE", " Delaware");
dplaState.addEnumeration("US-FL", " Florida");
dplaState.addEnumeration("US-GA", " Georgia");
dplaState.addEnumeration("US-HI", " Hawaii");
dplaState.addEnumeration("US-ID", " Idaho");
dplaState.addEnumeration("US-IL", " Illinois");
dplaState.addEnumeration("US-IN", " Indiana");
dplaState.addEnumeration("US-IA", " Iowa");
dplaState.addEnumeration("US-KS", " Kansas");
dplaState.addEnumeration("US-KY", " Kentucky");
dplaState.addEnumeration("US-LA", " Louisiana");
dplaState.addEnumeration("US-ME", " Maine");
dplaState.addEnumeration("US-MD", " Maryland");
dplaState.addEnumeration("US-MA", " Massachusetts");
dplaState.addEnumeration("US-MI", " Michigan");
dplaState.addEnumeration("US-MN", " Minnesota");
dplaState.addEnumeration("US-MS", " Mississippi");
dplaState.addEnumeration("US-MO", " Missouri");
dplaState.addEnumeration("US-MT", " Montana");
dplaState.addEnumeration("US-NE", " Nebraska");
dplaState.addEnumeration("US-NV", " Nevada");
dplaState.addEnumeration("US-NH", " New Hampshire");
dplaState.addEnumeration("US-NJ", " New Jersey");
dplaState.addEnumeration("US-NM", " New Mexico");
dplaState.addEnumeration("US-NY", " New York");
dplaState.addEnumeration("US-NC", " North Carolina");
dplaState.addEnumeration("US-ND", " North Dakota");
dplaState.addEnumeration("US-OH", " Ohio");
dplaState.addEnumeration("US-OK", " Oklahoma");
dplaState.addEnumeration("US-OR", " Oregon");
dplaState.addEnumeration("US-PA", " Pennsylvania");
dplaState.addEnumeration("US-RI", " Rhode Island");
dplaState.addEnumeration("US-SC", " South Carolina");
dplaState.addEnumeration("US-SD", " South Dakota");
dplaState.addEnumeration("US-TN", " Tennessee");
dplaState.addEnumeration("US-TX", " Texas");
dplaState.addEnumeration("US-UT", " Utah");
dplaState.addEnumeration("US-VT", " Vermont");
dplaState.addEnumeration("US-VA", " Virginia");
dplaState.addEnumeration("US-WA", " Washington");
dplaState.addEnumeration("US-WV", " West Virginia");
dplaState.addEnumeration("US-WI", " Wisconsin");
dplaState.addEnumeration("US-WY", " Wyoming");
dplaState.addEnumeration("US-DC", " District of Columbia");
dplaState.addEnumeration("US-AS", " American Samoa");
dplaState.addEnumeration("US-GU", " Guam");
dplaState.addEnumeration("US-MP", " Northern Mariana Islands");
dplaState.addEnumeration("US-PR", " Puerto Rico");
dplaState.addEnumeration("US-UM", " United States Minor Outlying Islands");
dplaState.addEnumeration("US-VI", " Virgin Islands, U.S.");


// assign thesaurus
handlers = template.getHandlersForPrefixAndName("edmfp", "subject");
for(JSONMappingHandler handler: handlers) {
    JSONMappingHandler about = handler.getHandlerForName("@resource");
	about.setThesaurus(JSONMappingHandler.thesaurus("http://thesaurus.europeanafashion.eu/thesaurus/Subject"));
}

//add bookmarks
sourceRes = template.getHandlersForPrefixAndName("dpla", "SourceResource").get(0);
sourceResRes = sourceRes.getHandlerForName("@about");
mappingHandler.addBookmark("Source Resource", sourceResRes);
title = sourceRes.getChild("dc:title");
mappingHandler.addBookmark("- Source Resource Title", title);
rights = sourceRes.getChild("dc:rights");
mappingHandler.addBookmark("- Source Rights", rights);


collection = template.getHandlersForPrefixAndName("dcmi", "Collection").get(0);

collectionRes = collection.getHandlerForName("@about");
mappingHandler.addBookmark("Collection", collectionRes);
collectionTitle = collection.getChild("dc:title");
mappingHandler.addBookmark("- Collection Title", collectionTitle);
collectionDesc = collection.getChild("dc:description");
mappingHandler.addBookmark("- Collection Description", collectionDesc);


aggregation = template.getHandlersForPrefixAndName("ore", "Aggregation").get(0);

aggregationRes = aggregation.getHandlerForName("@about");
mappingHandler.addBookmark("Aggregation", aggregationRes);

dataProvider = aggregation.getChild("edm:dataProvider");
mappingHandler.addBookmark("- Data Provider", dataProvider);
originalRecord = aggregation.getChild("dpla:originalRecord");
mappingHandler.addBookmark("- Digital Resource Source Record", originalRecord);


isShownAt = aggregation.getChild("edm:isShownAt");
isShownAt.setFixed(true);
isShownAtRes = isShownAt.getHandlerForName("@resource");
mappingHandler.addBookmark("- Is Shown At", isShownAtRes);

object = aggregation.getChild("edm:object")
object.setFixed(true);
objectRes = object.getHandlerForName("@resource");
mappingHandler.addBookmark("- Object", objectRes);

providerRes = aggregation.getChild("edm:provider").getChild("edm:Agent").getHandlerForName("@about");
mappingHandler.addBookmark("- Provider", providerRes);

edmFPsubject = template.getHandlersForPrefixAndName("edmfp", "subject").get(0).getHandlerForName("@resource");
mappingHandler.addBookmark("EDM FP subject", edmFPsubject);



